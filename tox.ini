[tox]
minversion = 2.0
envlist = lampstack, docs, releasenotes
skip_install = True
skipsdist = True

[testenv]
usedevelop = True
sitepackages = False
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
whitelist_externals = *
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=default::DeprecationWarning
passenv = HOME OS_USERNAME OS_PASSWORD OS_PROJECT_NAME http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

[testenv:venv]
commands = {posargs}

[testenv:ansible]
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}
    ANSIBLE_HOST_KEY_CHECKING = False
    ANSIBLE_SSH_CONTROL_PATH =  /tmp/%%h-%%r

[testenv:lampstack]
deps =
    {[testenv:ansible]deps}
setenv =
    {[testenv:ansible]setenv}
    LAMPSTACK_DIR = {toxinidir}/workloads/ansible/shade/lampstack
    ANSIBLE_INVENTORY = {env:LAMPSTACK_DIR}/hosts
    ANSIBLE_CONFIG = {env:LAMPSTACK_DIR}/ansible.cfg
commands = ansible-playbook -e "action=apply {posargs}" {env:LAMPSTACK_DIR}/site.yml

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:releasenotes]
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:k8s]
deps =
    {[testenv:ansible]deps}
setenv =
    {[testenv:ansible]setenv}
    K8S_DIR = {toxinidir}/workloads/ansible/shade/k8s
    ANSIBLE_INVENTORY = {env:K8S_DIR}/hosts
    ANSIBLE_CONFIG = {env:K8S_DIR}/ansible.cfg
commands = ansible-playbook -e "action=apply {posargs}" {env:K8S_DIR}/site.yml
